name: devops homework pipeline

# Run Only Push or Pull request on main branch and laravel-webapp/ Changes
on:
  push:
    branches: [main]
    paths:
      - 'laravel-webapp/**/*'
  pull_request:
    branches: [main]
    paths:
      - 'laravel-webapp/**/*'

env:
  PHP_FPM_IMAGE_NAME: php-fpm
  NGINX_IMAGE_NAME: nginx

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set short sha outputs
        id: short-sha
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and push PHP-FPM Docker image
        id: build-push-php-fpm
        uses: docker/build-push-action@v5
        with:
          context: ./laravel-webapp
          file: ./laravel-webapp/docker/php-fpm/Dockerfile
          push: true
          tags: ${{ vars.ECR_REPO_URL }}:${{ env.PHP_FPM_IMAGE_NAME }}-latest,${{ vars.ECR_REPO_URL }}:${{ env.PHP_FPM_IMAGE_NAME }}-${{ steps.short-sha.outputs.sha_short }}

      - name: Build and push Nginx Docker image
        id: build-push-nginx
        uses: docker/build-push-action@v5
        with:
          context: ./laravel-webapp
          file: ./laravel-webapp/docker/nginx/Dockerfile
          push: true
          tags: ${{ vars.ECR_REPO_URL }}:${{ env.NGINX_IMAGE_NAME }}-latest,${{ vars.ECR_REPO_URL }}:${{ env.NGINX_IMAGE_NAME }}-${{ steps.short-sha.outputs.sha_short }}

      - name: Output image URIs
        run: |
          echo "PHP-FPM Image URI: ${{ steps.login-ecr.outputs.registry }}/${{ env.PHP_FPM_IMAGE_NAME }}:${{ github.sha }}"
          echo "Nginx Image URI: ${{ steps.login-ecr.outputs.registry }}/${{ env.NGINX_IMAGE_NAME }}:${{ github.sha }}"

  deploy-ecs:
    name: Deploy to ECS
    runs-on: ubuntu-latest
    needs: [build-and-push]
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update ECS Service
        run: |
          aws ecs update-service \
            --region ${{ secrets.AWS_REGION }} \
            --cluster ${{ env.ECS_CLUSTER_NAME }} \
            --service ${{ env.ECS_SERVICE_NAME }} \
            --force-new-deployment 

  notify-success:
    name: Pipeline Success Notifications
    runs-on: ubuntu-latest
    needs: [build-and-push, deploy-ecs]

    steps:
      - name: Configure AWS credentials for SES
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_SES_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SES_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Send success email via SES
        if: success()
        run: |
          aws ses send-email \
            --region ${{ secrets.AWS_REGION }} \
            --from "${{ vars.AWS_SES_SENDER_EMAIL }}" \
            --destination "ToAddresses=${{ vars.DESTINATION_RECEIVER }}" \
            --subject "[GitHub Actions] Pipeline Success: ( ${{ github.repository }} - ${{ github.run_id }})" \
            --html "The ${{ github.repository }} pipeline on branch ${{ github.ref_name }} was successful.<br><br>Commit: ${{ github.sha }}<br>Link to Pipeline: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  notify-failure:
    name: Pipeline Failure Notifications
    runs-on: ubuntu-latest
    needs: [build-and-push, deploy-ecs]
    if: failure()

    steps:
      - name: Configure AWS credentials for SES
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_SES_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SES_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Send failure email via SES
        if: failure()
        run: |
          aws ses send-email \
            --region ${{ secrets.AWS_REGION }} \
            --from "${{ vars.AWS_SES_SENDER_EMAIL }}" \
            --destination "ToAddresses=${{ vars.DESTINATION_RECEIVER }}" \
            --subject "[GitHub Actions] Pipeline Failure: (${{ github.repository }} - ${{ github.run_id }} )" \
            --html "The ${{ github.repository }} pipeline on branch ${{ github.ref_name }} has failed.<br><br>Commit: ${{ github.sha }}<br>Link to pipeline: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}<br>Please check the pipeline logs for details."
